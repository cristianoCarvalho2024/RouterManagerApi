using Microsoft.EntityFrameworkCore;
using RouterManager.Application.Interfaces;
using RouterManager.Domain.Entities;
using RouterManager.Infrastructure.Persistence;

namespace RouterManager.Infrastructure.Repositories;

public class UpdateRepository : IUpdateRepository
{
    private readonly RouterManagerDbContext _ctx;
    public UpdateRepository(RouterManagerDbContext ctx) => _ctx = ctx;

    public async Task<UpdatePackage?> GetApplicableAsync(int providerId, string modelIdentifier, string firmwareVersion, CancellationToken ct = default)
    {
        return await _ctx.UpdatePackages
            .AsNoTracking()
            .OrderByDescending(p => p.Id)
            .FirstOrDefaultAsync(p => p.ProviderId == providerId
                && (p.ModelIdentifier == modelIdentifier || p.ModelIdentifier == "*")
                && (p.FirmwareVersion == null || p.FirmwareVersion == firmwareVersion), ct);
    }
}